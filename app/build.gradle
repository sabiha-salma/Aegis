apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

def getCmdOutput = { cmd ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine cmd
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitHash = { -> return getCmdOutput(["git", "rev-parse", "--short", "HEAD"]) }
def getGitBranch = { -> return getCmdOutput(["git", "rev-parse", "--abbrev-ref", "HEAD"]) }

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.beemdevelopment.aegis"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 35
        versionName "1.2"
        multiDexEnabled true
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
        buildConfigField "String", "GIT_BRANCH", "\"${getGitBranch()}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError true
        disable "MissingTranslation"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            ignoreFailures false
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = [title: "AegisDev", iconName: "ic_launcher_debug"]
            resValue "bool", "pref_secure_screen_default", "false"
            postprocessing {
                removeUnusedCode true
                removeUnusedResources true
                obfuscate false
                optimizeCode false
                proguardFiles getDefaultProguardFile('proguard-defaults.txt'), 'proguard-rules.pro'
            }
        }
        release {
            manifestPlaceholders = [title: "Aegis", iconName: "ic_launcher"]
            resValue "bool", "pref_secure_screen_default", "true"
            postprocessing {
                removeUnusedCode true
                removeUnusedResources true
                obfuscate false
                optimizeCode true
                proguardFiles getDefaultProguardFile('proguard-defaults.txt'), 'proguard-rules.pro'
            }
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.8.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

dependencies {
    def glideVersion = '4.11.0'
    def guavaVersion = '29.0'
    def junitVersion = '5.6.2'
    def libsuVersion = '2.5.1'

    androidTestImplementation 'androidx.test:core:1.3.1-alpha02';
    androidTestImplementation 'androidx.test.ext:junit:1.1.3-alpha02';
    androidTestImplementation 'androidx.test:runner:1.3.1-alpha02';
    // UiAutomator Testing
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0';
    androidTestImplementation 'org.hamcrest:hamcrest-integration:1.3'

    annotationProcessor 'androidx.annotation:annotation:1.1.0'
    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.biometric:biometric:1.0.1"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'com.github.apl-devs:appintro:6.0.0'
    implementation 'com.github.avito-tech:krop:0.44'
    implementation "com.github.bumptech.glide:annotations:${glideVersion}"
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation("com.github.bumptech.glide:recyclerview-integration:${glideVersion}") {
        transitive = false
    }
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
    implementation "com.github.topjohnwu.libsu:io:${libsuVersion}"
    implementation "com.google.guava:guava:${guavaVersion}-android"
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.12.1'
    implementation "com.mikepenz:iconics-core:3.2.5"
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.5@aar'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'net.lingala.zip4j:zip4j:2.6.0'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.65'

    testImplementation "com.google.guava:guava:${guavaVersion}-jre"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

protobuf {
// Configure the protoc executable
    protoc {
        // for apple m1, add protoc_platform=osx-x86_64 in $HOME/.gradle/gradle.properties
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:3.9.2:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:3.9.2"
        }
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            if (project.hasProperty('protoc_platform')) {
                artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0:${protoc_platform}"
            } else {
                artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
            }
        }
    }
}
